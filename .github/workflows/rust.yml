name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        rust: [nightly]
        target: ["default"]
    steps:
    - uses: actions/checkout@v2
    - name: Install deps on linux
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo bash -c 'apt-add-repository -y https://mirrors.kernel.org/ubuntu'
        sudo apt update
        sudo apt install -y \
          libasound2-plugins \
          libfaad2 \
          libffi6
          libfftw3-single3 \
          libjack-jackd2-0 \
          libmms0 \
          libmpg123-0 \
          libopus0 \
          liborc-0.4-0 \
          liborc-0.4-dev \
          libpulsedsp \
          libsamplerate0 \
          libspeexdsp1 \
          libtdb1 \
          libtheora0 \
          libtwolame0 \
          libwayland-egl1-mesa \
          libwebrtc-audio-processing1 \
          pulseaudio \
          pulseaudio-utils \
          webp \
    - name: Setup environment
      run: |
        curl -L https://servo-deps-2.s3.amazonaws.com/gstreamer/gstreamer-1.16-x86_64-linux-gnu.20190515.tar.gz | tar xz
        sed -i "s;prefix=/opt/gst;prefix=$PWD/gst;g" $PWD/gst/lib/pkgconfig/*.pc
        echo "PKG_CONFIG_PATH=$PWD/gst/lib/pkgconfig" >>$GITHUB_ENV
        echo "GST_PLUGIN_SYSTEM_PATH=$PWD/gst/lib/gstreamer-1.0" >>$GITHUB_ENV
        echo "GST_PLUGIN_SCANNER=$PWD/gst/libexec/gstreamer-1.0/gst-plugin-scanner" >>$GITHUB_ENV
        echo "PATH=$PATH:$PWD/gst/bin" >>$GITHUB_ENV
        echo "LD_LIBRARY_PATH=$PWD/gst/lib:$LD_LIBRARY_PATH" >>$GITHUB_ENV
    - name: Install rust
      uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          default: true
    - name: Pre-build
      run: |
        pulseaudio --start
        gst-inspect-1.0 | grep Total
    - name: Build
      run: cargo build
    - name: Examples
      run: |
        ls examples/*.rs | xargs -I{} basename  {} .rs  | grep -v params_connect | RUST_BACKTRACE=1 GST_DEBUG=3 xargs -I{} cargo ex {} --all-features

  build_result:
    name: homu build finished
    runs-on: ubuntu-latest
    needs: ["Build"]
    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"

